packages:
  - ipa-client
  - nfs-utils
  - python36
  - git
  - nginx
  - certbot-nginx

runcmd:
  # rsyslog
  - sudo sed -i 's/^#\*.\* @@remote-host:514/\*.\* @@mgmt01:514/g' /etc/rsyslog.conf
  - systemctl restart rsyslog
  # NFS
  - setsebool -P use_nfs_home_dirs 1
  - mkdir -p /project /scratch
  - echo "mgmt01:/home      /home      nfs rw,noatime,nolock,hard,tcp 0 0" >> /etc/fstab
  - echo "mgmt01:/project   /project   nfs rw,noatime,nolock,hard,tcp 0 0" >> /etc/fstab
  - echo "mgmt01:/scratch   /scratch   nfs rw,noatime,nolock,hard,tcp 0 0" >> /etc/fstab
  - echo "mgmt01:/etc/slurm /etc/slurm nfs rw,noatime,nolock,hard,tcp 0 0" >> /etc/fstab
  - mount -a
  # CVMFS
  - yum install -y https://ecsft.cern.ch/dist/cvmfs/cvmfs-release/cvmfs-release-latest.noarch.rpm
  - yum install -y https://package.computecanada.ca/yum/cc-cvmfs-public/Packages/computecanada-release-1.0-1.noarch.rpm
  - yum install -y cvmfs cvmfs-config-computecanada cvmfs-config-default cvmfs-auto-setup
  # JupyterHub
  - checkmodule -M -m -o /root/login.mod /root/login.te
  - semodule_package -o /root/login.pp -m /root/login.mod
  - semodule -i /root/login.pp
  - bash /root/jupyterhub.sh
  - setsebool -P httpd_can_network_connect 1
  - systemctl enable nginx
  - systemctl start nginx
  - certbot --nginx -m felix@calculquebec.ca --noninteractive --redirect --agree-tos --domains ${domain_name}
  - systemctl enable jupyterhub
  - systemctl start jupyterhub

write_files:
  - path: /root/jupyterhub.sh
    content: |
        python36 -m venv /opt/jupyterhub
        source /opt/jupyterhub/bin/activate
        pip install jupyterhub==0.9.0
        pip install git+https://github.com/cmd-ntrf/batchspawner@remote_port
        pip install notebook
        
        # Node.js and NPM
        curl --silent --location https://rpm.nodesource.com/setup_8.x | bash -
        yum -y install nodejs
        npm install -g configurable-http-proxy
        
        # Ownership
        groupadd -g 2003 jupyterhub
        useradd -m -c "Jupyterhub" -d /opt/jupyterhub -u 2003 -g jupyterhub  -s /bin/bash jupyterhub
        chown -R jupyterhub:jupyterhub /opt/jupyterhub
        
        # Build notebook virtualenv
        VENV="/dev/shm/jupyter"
        rm -rf $VENV
        mkdir -p $VENV
        PYTHON="/cvmfs/soft.computecanada.ca/easybuild/software/2017/Core/python/3.7.0/bin/python3"
        $PYTHON -m virtualenv $VENV
        source $VENV/bin/activate
        pip install --no-cache-dir jupyterhub notebook jupyterlmod nbserverproxy
        pip install --no-cache-dir https://github.com/cmd-ntrf/batchspawner/archive/remote_port.zip
        pip install --no-cache-dir https://github.com/jupyterhub/nbrsessionproxy/archive/master.zip

        jupyter nbextension install --py jupyterlmod --sys-prefix
        jupyter nbextension enable --py jupyterlmod --sys-prefix
        jupyter serverextension enable --py jupyterlmod --sys-prefix
        jupyter serverextension enable --py nbserverproxy --sys-prefix
        jupyter nbextension install --py nbrsessionproxy --sys-prefix
        jupyter nbextension enable --py nbrsessionproxy --sys-prefix
        jupyter serverextension enable --py nbrsessionproxy --sys-prefix

        deactivate

        $PYTHON -m virtualenv --relocatable $VENV
        sed -i 's;VIRTUAL_ENV=.*;VIRTUAL_ENV=$(readlink -f $(dirname $BASH_SOURCE)/..);g' $VENV/bin/activate
        tar czf /project/jupyter_singleuser.tar.gz --directory=$VENV/.. jupyter
        rm -rf $VENV

    permissions: 0700
  - path: /opt/jupyterhub/etc/jupyterhub_config.py
    content: |
        # Configuration file for jupyterhub (postgres example).
        from batchspawner import SlurmSpawner
        class MySpawner(SlurmSpawner):
            @property
            def batch_script(self):
                with open('/opt/jupyterhub/etc/submit.sh', 'r') as script_template:
                    script = script_template.read()
                return script
        c.JupyterHub.spawner_class = MySpawner
        c.JupyterHub.hub_ip = '0.0.0.0'
        c.JupyterHub.ip = '127.0.0.1'
        c.Spawner.http_timeout = 600
        c.Spawner.start_timeout = 600
        c.Spawner.poll_interval = 600

    permissions: 0600
  - path: /opt/jupyterhub/etc/submit.sh
    content: |
        #!/bin/bash
        ##SBATCH --time=00-1:00:00
        #SBATCH --output={homedir}/jupyterhub_slurmspawner_%j.log
        #SBATCH --job-name=spawner-jupyterhub
        #SBATCH --workdir={homedir}
        #SBATCH --mem=2000M
        #SBATCH --cpus-per-task=2
        #SBATCH --export={keepvars}
        unset XDG_RUNTIME_DIR
        module restore

        # Environment setup
        VENV="/dev/shm/jupyter"
        rm -rf $VENV
        tar xf /project/jupyter_singleuser.tar.gz -C /dev/shm

        # Launch jupyterhub single server
        source $VENV/bin/activate
        {cmd}

    permissions: 0600
  - content: |
        [Unit]
        Description=Jupyterhub
        After=network-online.target

        [Service]
        User=jupyterhub
        Group=jupyterhub
        ExecStart=/opt/jupyterhub/bin/jupyterhub --config /opt/jupyterhub/etc/jupyterhub_config.py
        WorkingDirectory=/opt/jupyterhub/etc

        [Install]
        WantedBy=multi-user.target
    path: /lib/systemd/system/jupyterhub.service
  - content: |
        jupyterhub      ALL=(ALL)       NOPASSWD:SETENV: /bin/sbatch, /bin/scancel [0-9]*, /bin/squeue -h -j [0-9]* -o %T\ %B
    path: /etc/sudoers.d/99-jupyterhub-user
    permissions: 0400
  - content: |
        if [[ $UID -gt 10000 ]]; then
          if [[ -r /cvmfs/soft.computecanada.ca/config/profile/bash.sh ]]; then
            source /cvmfs/soft.computecanada.ca/config/profile/bash.sh
          fi
        fi
    path: /etc/profile.d/z-00-computecanada.sh
  - path: /root/freeipa.sh
    permissions: 0700
    content: |
        #!/bin/bash
        systemctl is-active --quiet NetworkManager
        IS_RUNNING=$?
        if [ $IS_RUNNING -eq 0 ]; then
            systemctl stop NetworkManager
        fi
        hostnamectl set-hostname ${hostname}.${domain_name}
        sed -i "/nameserver/c\nameserver ${mgmt01_ip}" /etc/resolv.conf
        sed -i "/search/c\search ${domain_name}" /etc/resolv.conf
        chattr +i /etc/resolv.conf
        if [ $IS_RUNNING -eq 0 ]; then
            systemctl start NetworkManager
        fi
        until ping -c1 mgmt01 &>/dev/null; do :; done
        sleep 30
        ipa-client-install --mkhomedir --ssh-trust-dns \
                           --enable-dns-updates \
                           --unattended -p admin \
                           -w ${admin_passwd}
  - path: /etc/cvmfs/default.local
    content: |
        CVMFS_REPOSITORIES="cvmfs-config.computecanada.ca,soft.computecanada.ca"
        CVMFS_QUOTA_LIMIT=4450
        CVMFS_HTTP_PROXY="http://mgmt01:3128"
  - path: /root/login.te
    content: |
        module login 1.0;

        require {
          type unconfined_t;
          type unconfined_service_t;
          class process transition;
        }

        allow unconfined_service_t unconfined_t:process transition;
    permissions: 0600
  - path: /etc/nginx/conf.d/jupyterhub.conf
    content: |
        # top-level http config for websocket headers
        # If Upgrade is defined, Connection = upgrade
        # If Upgrade is empty, Connection = close
        map $http_upgrade $connection_upgrade {
            default upgrade;
            ''      close;
        }

        # HTTP server to handle JupyterHub
        server {
            listen 80;
            server_name ${domain_name};

            location / {
                proxy_pass http://127.0.0.1:8000;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

                # websocket headers
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;
            }

            # Managing requests to verify letsencrypt host
            location ~ /.well-known {
                allow all;
            }
        }
    permissions: 644
