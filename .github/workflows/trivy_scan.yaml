name: Trivy Vulnerabilities Scan

on:
  pull_request:

jobs:
  trivy-vuln-scan:
    name: Running Trivy Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Resolve symbolic links and fix source
        run: |
          rm {aws,azure,gcp,openstack}/{outputs.tf,variables.tf}
          for cloud in aws azure gcp openstack; do
            cp common/outputs.tf common/variables.tf $cloud/;
          done
          for example in examples/*/*.tf; do
            sed 's;git::https://github.com/ComputeCanada/magic_castle.git//;../../;g' $example
          done

      - name: Manual Trivy Setup
        uses: aquasecurity/setup-trivy@v0.2.2
        with:
          version: v0.61.1
          cache: true

      - name: Run Trivy on providers
        shell: bash
        run: trivy config --misconfig-scanners terraform --tf-exclude-downloaded-modules --skip-dirs examples/advanced --format json -o trivy-results.json .

      - name: Convert Trivy JSON output to SARIF
        run: trivy convert --format sarif --output trivy-results.sarif trivy-results.json

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"

      - name: Publish Trivy Output to Summary
        run: |
          if [[ -s trivy-results.json ]]; then
          {
            echo "### Security Output"
            echo "<details><summary>Click to expand</summary>"
            echo ""
            echo '```terraform'
            cat trivy-results.json
            echo '```'
            echo "</details>"
          } >> $GITHUB_STEP_SUMMARY
          fi
